.pio_version 0
.program aprs_controller

; Matches with pin_outs.h
.define RADIO_CLK_PIN 2
.define RADIO_SEL_PIN 3

jmp lod_stuff_counter

lod_stuff_counter:
    mov y, NULL
    in y, 32
    mov y, ~NULL
    in y, 5
    mov y, isr
    jmp !osre aprs_loop
    pull block
    jmp aprs_loop

aprs_loop:
    wait 1 gpio RADIO_CLK_PIN
    mov x, NULL
    out x, 1
    mov pins, x
    wait 0 gpio RADIO_CLK_PIN
    jmp !x lod_stuff_counter
    jmp !osre check_bit_stuff
    pull block
    jmp check_bit_stuff

check_bit_stuff:
    jmp y-- aprs_loop
    jmp bit_stuff

bit_stuff:
    wait 1 gpio RADIO_CLK_PIN
    mov y, NULL
    out y, 1
    wait 0 gpio RADIO_CLK_PIN
    jmp lod_stuff_counter


% c-sdk {
static inline void aprs_controller_program_init(PIO pio, uint sm, uint offset, uint clk_pin, uint sel_pin, float div) {
    pio_sm_config c = aprs_controller_program_get_default_config(offset);
    pio_gpio_init(pio, clk_pin);
    pio_gpio_init(pio, sel_pin);

    sm_config_set_out_pins(&c, clk_pin, 1);
    sm_config_set_out_pins(&c, sel_pin, 1);

    pio_sm_set_consecutive_pindirs(pio, sm, clk_pin, 1, false);
    pio_sm_set_consecutive_pindirs(pio, sm, sel_pin, 1, true);

    sm_config_set_clkdiv(&c, div);
    sm_config_set_in_shift(&c, false, false, 1);

    pio_sm_init(pio, sm, offset, &c);
    pio_sm_set_enabled(pio, sm, true);
}
%}